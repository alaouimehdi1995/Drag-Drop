/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ConcreteCreatorTriggers_1 = __webpack_require__(1);
var BlocAdder_1 = __webpack_require__(3);
/**
 * Created by mehdi on 05/11/17.
 */
var trigger = new ConcreteCreatorTriggers_1.KeyboardEventTrigger(document);
var blocCreator = new BlocAdder_1.BlocCreator(trigger, document.body);
//# sourceMappingURL=main.js.map

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var EventTrigger_1 = __webpack_require__(2);
var KeyboardEventTrigger = (function (_super) {
    __extends(KeyboardEventTrigger, _super);
    function KeyboardEventTrigger() {
        _super.apply(this, arguments);
    }
    KeyboardEventTrigger.prototype.activateEvent = function () {
        /*
         * Here the code to add The event Listener, we could implement it after extend
         *
         *
         * */
        var _this = this;
        this.concernedElement.addEventListener('keypress', function (e) {
            console.log("Triggered");
            var saisi = e.keyCode; //Getting the the key pressed's ASCII code
            if (saisi != 127 && saisi != 13) {
                var blocContent = String.fromCharCode(saisi);
                _this.notifyAll(blocContent);
            }
        }, false);
    };
    return KeyboardEventTrigger;
}(EventTrigger_1.EventTrigger));
exports.KeyboardEventTrigger = KeyboardEventTrigger;
//# sourceMappingURL=ConcreteCreatorTriggers.js.map

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Created by mehdi on 05/11/17.
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Position = (function () {
    function Position(x, y) {
        this.x = x;
        this.y = y;
    }
    Position.prototype.setX = function (x) {
        this.x = x;
    };
    Position.prototype.setY = function (y) {
        this.y = y;
    };
    Position.prototype.setXY = function (x, y) {
        this.x = x;
        this.y = y;
    };
    Position.prototype.getX = function () {
        return this.x;
    };
    Position.prototype.getY = function () {
        return this.y;
    };
    return Position;
}());
exports.Position = Position;
var EventTrigger = (function () {
    function EventTrigger(concernedElement) {
        this.concernedElement = concernedElement;
        this.observers = [];
        this.activateEvent();
    }
    EventTrigger.prototype.addObserver = function (observer) {
        this.observers.push(observer);
    };
    EventTrigger.prototype.deleteObserver = function (observer) {
        for (var i = 0; i < this.observers.length; i++) {
            if (this.observers[i] == observer) {
                this.observers.splice(i, 1);
                return true;
            }
        }
        return false;
    };
    EventTrigger.prototype.notifyAll = function (blocContent, position) {
        if (position) {
            for (var _i = 0, _a = this.observers; _i < _a.length; _i++) {
                var o = _a[_i];
                o.trigger(blocContent, position);
            }
        }
        else {
            for (var _b = 0, _c = this.observers; _b < _c.length; _b++) {
                var o = _c[_b];
                o.trigger(blocContent);
            }
        }
    };
    return EventTrigger;
}());
exports.EventTrigger = EventTrigger;
var ConcreteEventTrigger = (function (_super) {
    __extends(ConcreteEventTrigger, _super);
    function ConcreteEventTrigger() {
        _super.apply(this, arguments);
    }
    ConcreteEventTrigger.prototype.activateEvent = function () {
        /*
         * Here the code to add The event Listener, we could implement it after extend
         *
         *
         * */
    };
    return ConcreteEventTrigger;
}(EventTrigger));
//# sourceMappingURL=EventTrigger.js.map

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Created by mehdi on 05/11/17.
 */

var BlocCreator = (function () {
    function BlocCreator(eventTrigger, fatherElement) {
        this.eventTrigger = eventTrigger;
        this.fatherElement = fatherElement;
        //Define the HTML tag and css classname of our block, so that we could customize them later
        this.cssClassName = 'draggableBox';
        this.HTMLtagName = 'div';
        this.eventTrigger.addObserver(this); //Implementing the Observer pattern
    }
    BlocCreator.prototype.setCSSClassName = function (cssClassName) {
        this.cssClassName = cssClassName;
    };
    BlocCreator.prototype.setHTMLTagName = function (HTMLTagName) {
        this.HTMLtagName = HTMLTagName;
    };
    BlocCreator.prototype.trigger = function (blocContent, position) {
        var Div = document.createElement(this.HTMLtagName);
        Div.className = this.cssClassName;
        Div.innerHTML = blocContent;
        this.fatherElement.appendChild(Div);
        /*
        * We should add the move event trigger here
        * */
    };
    return BlocCreator;
}());
exports.BlocCreator = BlocCreator;
//# sourceMappingURL=BlocAdder.js.map

/***/ })
/******/ ]);